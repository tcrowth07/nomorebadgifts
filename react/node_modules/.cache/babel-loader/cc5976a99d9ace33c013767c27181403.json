{"ast":null,"code":"import _slicedToArray from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/src/views/QuizPage/Sections/QuestionBox.js\";\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FiberManualRecord from \"@material-ui/icons/FiberManualRecord\";\nimport styles from \"assets/jss/material-kit-react/views/quizPageSections/quizStyle.js\";\nimport { Link } from \"react-router-dom\";\nvar useStyles = makeStyles(styles);\nexport default function ProductSection() {\n  var _this = this;\n\n  var classes = useStyles();\n  var questions = [{\n    id: 1,\n    text: \"You enjoy vibrate, social gatherings\",\n    category: \"EI\"\n  }, {\n    id: 2,\n    text: \"You often spend time exploring unrealistic ideas\",\n    category: \"JP\"\n  }, {\n    id: 3,\n    text: \"If your friend is sad, you try to solve their problem rather than comforting them\",\n    category: \"TF\"\n  }];\n\n  var _React$useState = React.useState(\"b\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedEnabled = _React$useState2[0],\n      setSelectedEnabled = _React$useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, Object.values(questions).map(function (question, id) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.questionBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, question.text), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Radio, {\n        checked: selectedEnabled === \"a\",\n        onChange: function onChange() {\n          return setSelectedEnabled(\"a\");\n        },\n        value: \"a\",\n        name: \"radio button enabled\",\n        \"aria-label\": \"A\",\n        icon: /*#__PURE__*/React.createElement(FiberManualRecord, {\n          className: classes.radioUnchecked,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 23\n          }\n        }),\n        checkedIcon: /*#__PURE__*/React.createElement(FiberManualRecord, {\n          className: classes.radioChecked,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }\n        }),\n        classes: {\n          checked: classes.radio,\n          root: classes.radioRoot\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Radio, {\n        checked: selectedEnabled === \"a\",\n        onChange: function onChange() {\n          return setSelectedEnabled(\"a\");\n        },\n        value: \"a\",\n        name: \"radio button enabled\",\n        \"aria-label\": \"B\",\n        icon: /*#__PURE__*/React.createElement(FiberManualRecord, {\n          className: classes.radioUnchecked,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 23\n          }\n        }),\n        checkedIcon: /*#__PURE__*/React.createElement(FiberManualRecord, {\n          className: classes.radioChecked,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }\n        }),\n        classes: {\n          checked: classes.radio,\n          root: classes.radioRoot\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      })),\n      classes: {\n        label: classes.label,\n        root: classes.labelRoot\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/results-page\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.finish,\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Finish\")));\n}","map":{"version":3,"sources":["/Users/tcrowth07/Desktop/NoMoreBad.Gifts/src/views/QuizPage/Sections/QuestionBox.js"],"names":["React","makeStyles","GridContainer","GridItem","Button","FormControlLabel","Radio","FiberManualRecord","styles","Link","useStyles","ProductSection","classes","questions","id","text","category","useState","selectedEnabled","setSelectedEnabled","section","Object","values","map","question","questionBox","radioUnchecked","radioChecked","checked","radio","root","radioRoot","label","labelRoot","button","finish"],"mappings":"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","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FiberManualRecord from \"@material-ui/icons/FiberManualRecord\";\n\nimport styles from \"assets/jss/material-kit-react/views/quizPageSections/quizStyle.js\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function ProductSection() {\n  const classes = useStyles();\n\n  const questions = [\n    {\n      id: 1,\n      text: \"You enjoy vibrate, social gatherings\",\n      category: \"EI\",\n    },\n    {\n      id: 2,\n      text: \"You often spend time exploring unrealistic ideas\",\n      category: \"JP\",\n    },\n    {\n      id: 3,\n      text:\n        \"If your friend is sad, you try to solve their problem rather than comforting them\",\n      category: \"TF\",\n    },\n  ];\n\n  const [selectedEnabled, setSelectedEnabled] = React.useState(\"b\");\n\n  return (\n    <div className={classes.section}>\n      {Object.values(questions).map((question, id) => (\n        <div className={classes.questionBox}>\n          <hr />\n          <h2>{question.text}</h2>\n          <br />\n          {/* <GridContainer>\n            <GridItem xs={1} sm={1} md={1}></GridItem>\n            <GridItem xs={2} sm={2} md={2}>\n              <Button onClick=\"select\">Not at all</Button>\n            </GridItem>\n            <GridItem xs={2} sm={2} md={2}>\n              <Button>Not very much</Button>\n            </GridItem>\n            <GridItem xs={2} sm={2} md={2}>\n              <Button>Neutral</Button>\n            </GridItem>\n            <GridItem xs={2} sm={2} md={2}>\n              <Button>Somewhat</Button>\n            </GridItem>\n            <GridItem xs={2} sm={2} md={2}>\n              <Button>Very Much</Button>\n            </GridItem>\n            <GridItem xs={1} sm={1} md={1}></GridItem>\n          </GridContainer> */}\n          <FormControlLabel\n            control={\n              <>\n              <Radio\n                checked={selectedEnabled === \"a\"}\n                onChange={() => setSelectedEnabled(\"a\")}\n                value=\"a\"\n                name=\"radio button enabled\"\n                aria-label=\"A\"\n                icon={<FiberManualRecord className={classes.radioUnchecked} />}\n                checkedIcon={\n                  <FiberManualRecord className={classes.radioChecked} />\n                }\n                classes={{\n                  checked: classes.radio,\n                  root: classes.radioRoot,\n                }}\n              />\n              <Radio\n                checked={selectedEnabled === \"a\"}\n                onChange={() => setSelectedEnabled(\"a\")}\n                value=\"a\"\n                name=\"radio button enabled\"\n                aria-label=\"B\"\n                icon={<FiberManualRecord className={classes.radioUnchecked} />}\n                checkedIcon={\n                  <FiberManualRecord className={classes.radioChecked} />\n                }\n                classes={{\n                  checked: classes.radio,\n                  root: classes.radioRoot,\n                }}\n              />\n              </>\n            }\n            classes={{\n              label: classes.label,\n              root: classes.labelRoot,\n            }}\n          />\n          \n          <hr />\n        </div>\n      ))}\n      <Link to={\"/results-page\"} className={classes.button}>\n        <Button className={classes.finish} color=\"warning\">\n          Finish\n        </Button>\n      </Link>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}