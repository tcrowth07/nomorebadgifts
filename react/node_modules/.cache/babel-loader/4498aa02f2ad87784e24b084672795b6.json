{"ast":null,"code":"import _slicedToArray from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/src/views/QuizPage/Sections/QuestionBox.js\";\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"assets/jss/material-kit-react/views/quizPageSections/quizStyle.js\";\nimport useAxios from \"axios-hooks\";\nvar useStyles = makeStyles(styles);\nexport default function QuestionBox() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      arrayOfAnswers = _React$useState2[0],\n      setArrayOfAnswers = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      random = _React$useState4[0],\n      setRandom = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      random2 = _React$useState6[0],\n      setRandom2 = _React$useState6[1];\n\n  var url = \"https://nomorebadgifts.herokuapp.com/questions\";\n\n  var _useAxios = useAxios(url),\n      _useAxios2 = _slicedToArray(_useAxios, 1),\n      _useAxios2$ = _useAxios2[0],\n      questions = _useAxios2$.questions,\n      loading = _useAxios2$.loading,\n      error = _useAxios2$.error,\n      response = _useAxios2$.response;\n\n  if (loading) return /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"There was an error loading the quiz\");\n\n  if (response.data) {\n    questions = response.data;\n  }\n\n  function enable(questionNumber, answer) {\n    arrayOfAnswers[questionNumber] = answer;\n    setArrayOfAnswers(arrayOfAnswers); //I have no idea why I need this, but it doesn't work without it\n\n    setRandom(answer);\n    setRandom2(questionNumber);\n    console.log(\"arrayOfAnswers\", arrayOfAnswers);\n    console.log(\"random\", random);\n    console.log(\"random2\", random2);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, Object.values(questions).map(function (question, id) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      className: classes.questionBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, question.text), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GridContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 1,\n      sm: 1,\n      md: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 3,\n      md: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: id + \"-1\",\n      onClick: function onClick() {\n        enable(id, 1);\n      },\n      color: arrayOfAnswers[id] === 1 ? \"success\" : \"github\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"False\")), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 3,\n      md: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: id + \"-2\",\n      onClick: function onClick() {\n        enable(id, 2);\n      },\n      color: arrayOfAnswers[id] === 2 ? \"success\" : \"github\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Somewhat false\")), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 3,\n      md: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: id + \"-4\",\n      onClick: function onClick() {\n        enable(id, 4);\n      },\n      color: arrayOfAnswers[id] === 4 ? \"success\" : \"github\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, \"Somewhat true\")), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 3,\n      md: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: id + \"-5\",\n      onClick: function onClick() {\n        enable(id, 5);\n      },\n      color: arrayOfAnswers[id] === 5 ? \"success\" : \"github\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"True\")), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 1,\n      sm: 1,\n      md: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: \"/results-page\",\n      state: arrayOfAnswers\n    },\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.finish,\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Finish\")));\n}","map":{"version":3,"sources":["/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/src/views/QuizPage/Sections/QuestionBox.js"],"names":["React","makeStyles","GridContainer","GridItem","Button","Link","styles","useAxios","useStyles","QuestionBox","classes","useState","arrayOfAnswers","setArrayOfAnswers","random","setRandom","random2","setRandom2","url","questions","loading","error","response","color","data","enable","questionNumber","answer","console","log","section","Object","values","map","question","id","questionBox","text","pathname","state","button","finish"],"mappings":"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","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"assets/jss/material-kit-react/views/quizPageSections/quizStyle.js\";\n\nimport useAxios from \"axios-hooks\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function QuestionBox() {\n  const classes = useStyles();\n\n  const [arrayOfAnswers, setArrayOfAnswers] = React.useState([]);\n  const [random, setRandom] = React.useState(0);\n  const [random2, setRandom2] = React.useState(0);\n\n  const url = \"https://nomorebadgifts.herokuapp.com/questions\";\n\n  let [{ questions, loading, error, response }] = useAxios(url);\n\n  if (loading) return <h5>Loading...</h5>;\n  if (error)\n    return (\n      <h5 style={{ color: \"red\" }}>There was an error loading the quiz</h5>\n    );\n\n  if (response.data) {\n    questions = response.data;\n  }\n\n  function enable(questionNumber, answer) {\n    arrayOfAnswers[questionNumber] = answer;\n    setArrayOfAnswers(arrayOfAnswers);\n\n    //I have no idea why I need this, but it doesn't work without it\n    setRandom(answer);\n    setRandom2(questionNumber);\n    console.log(\"arrayOfAnswers\", arrayOfAnswers);\n    console.log(\"random\", random);\n    console.log(\"random2\", random2);\n  }\n\n  return (\n    <div className={classes.section}>\n      {Object.values(questions).map((question, id) => (\n        <div key={id} className={classes.questionBox}>\n          <hr />\n          <h2>{question.text}</h2>\n          <br />\n          <GridContainer>\n            <GridItem xs={1} sm={1} md={1}></GridItem>\n            <GridItem xs={12} sm={3} md={3}>\n              <Button\n                id={id + \"-1\"}\n                onClick={() => {\n                  enable(id, 1);\n                }}\n                color={arrayOfAnswers[id] === 1 ? \"success\" : \"github\"}\n              >\n                False\n              </Button>\n            </GridItem>\n            <GridItem xs={12} sm={3} md={3}>\n              <Button\n                id={id + \"-2\"}\n                onClick={() => {\n                  enable(id, 2);\n                }}\n                color={arrayOfAnswers[id] === 2 ? \"success\" : \"github\"}\n              >\n                Somewhat false\n              </Button>\n            </GridItem>\n            {/* <GridItem xs={12} sm={2} md={2}>\n              <Button\n                id={id + \"-3\"}\n                onClick={() => {\n                  enable(id, 3);\n                }}\n                color={arrayOfAnswers[id] === 3 ? \"success\" : \"github\"}\n              >\n                Neutral\n              </Button>\n            </GridItem> */}\n            <GridItem xs={12} sm={3} md={3}>\n              <Button\n                id={id + \"-4\"}\n                onClick={() => {\n                  enable(id, 4);\n                }}\n                color={arrayOfAnswers[id] === 4 ? \"success\" : \"github\"}\n              >\n                Somewhat true\n              </Button>\n            </GridItem>\n            <GridItem xs={12} sm={3} md={3}>\n              <Button\n                id={id + \"-5\"}\n                onClick={() => {\n                  enable(id, 5);\n                }}\n                color={arrayOfAnswers[id] === 5 ? \"success\" : \"github\"}\n              >\n                True\n              </Button>\n            </GridItem>\n            <GridItem xs={1} sm={1} md={1}></GridItem>\n          </GridContainer>\n          <hr />\n        </div>\n      ))}\n      <Link\n        to={{\n          pathname: \"/results-page\",\n          state: arrayOfAnswers,\n        }}\n        className={classes.button}\n      >\n        <Button\n          className={classes.finish}\n          color=\"warning\"\n        >\n          Finish\n        </Button>\n      </Link>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}