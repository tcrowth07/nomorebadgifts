{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/src/views/Admin/admin.js\";\nimport React, { useState, useEffect } from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport styles from \"assets/jss/material-kit-react/views/adminPage/adminStyle.js\";\nimport useAxios from \"axios-hooks\";\nimport { Form, Formik, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\"; //import classes from \"*.module.css\";\n\nvar useStyles = makeStyles(styles);\nexport default function QuizPage(props) {\n  var _this = this;\n\n  var classes = useStyles();\n  var rest = Object.assign({}, props);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var urlGetQuestions = \"http://localhost:5000/questions\";\n  useEffect(function () {\n    var GetQuestions = function GetQuestions() {\n      axios.get(urlGetQuestions).then(function (resp) {\n        console.log(resp.data);\n        setQuestions(resp.data, questions);\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    }; //GetQuestions()\n\n  }, [questions]); //};\n  ///Custom Components///\n\n  var CustomTextInput = function CustomTextInput(_ref) {\n    var label = _ref.label,\n        props = _objectWithoutProperties(_ref, [\"label\"]);\n\n    var _useField = useField(props),\n        _useField2 = _slicedToArray(_useField, 2),\n        field = _useField2[0],\n        meta = _useField2[1];\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: classes.inputLabel,\n      htmlFor: props.id || props.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, label), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: classes.textInput\n    }, field, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, meta.error) : null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, Object.assign({\n    color: \"transparent\",\n    brand: \"NoMoreBad.Gifts\",\n    rightLinks: /*#__PURE__*/React.createElement(HeaderLinks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }),\n    fixed: true,\n    changeColorOnScroll: {\n      height: 200,\n      color: \"dark\"\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Parallax, {\n    small: true,\n    filter: true,\n    image: require(\"assets/img/gift.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.main, classes.mainRaised),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Admin Page\"))))), /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Quiz Questions\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: classes.firstRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 23\n    }\n  }, \"Text\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }\n  }, \"Cat\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, Object.values(questions).map(function (question, id) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      className: classes.tableRow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: classes.td,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, question.questionNumber), /*#__PURE__*/React.createElement(\"td\", {\n      className: classes.td,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, question.text), /*#__PURE__*/React.createElement(\"td\", {\n      className: classes.td,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, question.category));\n  })))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      questionNumber: 0,\n      text: \"\",\n      category: \"\"\n    },\n    validationSchema: Yup.object({\n      questionNumber: Yup.number().min(1, \"Choose a valid question number\").required(\"Required\"),\n      text: Yup.string().required(\"Required\"),\n      category: Yup.string().min(2, \"Must be two characters\").max(2, \"Must be two characters\")\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var setSubmitting, resetForm, results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = _ref2.setSubmitting, resetForm = _ref2.resetForm;\n                console.log(\"onSubmit\", values);\n                _context.next = 4;\n                return axios({\n                  method: \"post\",\n                  url: \"http://localhost:5000/questions\",\n                  data: {\n                    questionNumber: values.questionNumber,\n                    text: values.text,\n                    category: values.category\n                  }\n                });\n\n              case 4:\n                results = _context.sent;\n                //GetQuestions()\n                alert(\"Question number \".concat(results.data.questionNumber, \" was successfully added to the database\"));\n                setSubmitting(false);\n                resetForm();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }\n    }, \"Add New Question\"), /*#__PURE__*/React.createElement(CustomTextInput, {\n      label: \"Question Number\",\n      name: \"questionNumber\",\n      type: \"number\",\n      placeholder: \"Question number\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(CustomTextInput, {\n      label: \"Question Text\",\n      name: \"text\",\n      type: \"text\",\n      placeholder: \"Enter question here...\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(CustomTextInput, {\n      label: \"Category\",\n      name: \"category\",\n      type: \"text\",\n      placeholder: \"Category\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 23\n      }\n    }, props.isSubmitting ? \"Loading...\" : \"Submit\"));\n  })))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/src/views/Admin/admin.js"],"names":["React","useState","useEffect","classNames","makeStyles","Header","Footer","GridContainer","GridItem","HeaderLinks","Parallax","styles","useAxios","Form","Formik","useField","Yup","axios","useStyles","QuizPage","props","classes","rest","questions","setQuestions","urlGetQuestions","GetQuestions","get","then","resp","console","log","data","error","CustomTextInput","label","field","meta","inputLabel","id","name","textInput","touched","height","color","require","main","mainRaised","container","profile","table","firstRow","header","Object","values","map","question","tableRow","td","questionNumber","text","category","object","number","min","required","string","max","setSubmitting","resetForm","method","url","results","alert","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/adminPage/adminStyle.js\";\nimport useAxios from \"axios-hooks\";\n\nimport { Form, Formik, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n//import classes from \"*.module.css\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function QuizPage(props) {\n  const classes = useStyles();\n  const { ...rest } = props;\n\n  const [questions, setQuestions] = useState([]);\n\n  const urlGetQuestions = \"http://localhost:5000/questions\";\n  useEffect(() => {\n    const GetQuestions = () => {\n        axios.get(urlGetQuestions)\n          .then(resp => {\n            console.log(resp.data);\n            setQuestions(resp.data, questions);\n          })\n          .catch(error => console.log(error))\n    };\n    //GetQuestions()\n  }, [questions]);\n  //};\n\n\n  ///Custom Components///\n  const CustomTextInput = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n    return (\n      <div>\n        <label className={classes.inputLabel} htmlFor={props.id || props.name}>\n          {label}\n        </label>\n        <br />\n        <input className={classes.textInput} {...field} {...props} />\n\n        {meta.touched && meta.error ? (\n          <div className={classes.error}>{meta.error}</div>\n        ) : null}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Header\n        color=\"transparent\"\n        brand=\"NoMoreBad.Gifts\"\n        rightLinks={<HeaderLinks />}\n        fixed\n        changeColorOnScroll={{\n          height: 200,\n          color: \"dark\",\n        }}\n        {...rest}\n      />\n      <Parallax small filter image={require(\"assets/img/gift.jpg\")} />\n      <div className={classNames(classes.main, classes.mainRaised)}>\n        <div>\n          <div className={classes.container}>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={12} md={8}>\n                <div className={classes.profile}>\n                  <div>\n                    <h1>Admin Page</h1>\n                  </div>\n                </div>\n              </GridItem>\n            </GridContainer>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={12} md={6}>\n                <h3>Quiz Questions</h3>\n                <table className={classes.table}>\n                  <thead>\n                    <tr className={classes.firstRow}>\n                      <th className={classes.header}>#</th>\n                      <th className={classes.header}>Text</th>\n                      <th className={classes.header}>Cat</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {Object.values(questions).map((question, id) => (\n                      <tr key={id} className={classes.tableRow}>\n                        <td className={classes.td}>\n                          {question.questionNumber}\n                        </td>\n                        <td className={classes.td}>{question.text}</td>\n                        <td className={classes.td}>{question.category}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </GridItem>\n              <GridItem xs={12} sm={12} md={6}>\n                <Formik\n                  enableReinitialize\n                  initialValues={{\n                    questionNumber: 0,\n                    text: \"\",\n                    category: \"\",\n                  }}\n                  validationSchema={Yup.object({\n                    questionNumber: Yup.number()\n                      .min(1, \"Choose a valid question number\")\n                      .required(\"Required\"),\n                    text: Yup.string().required(\"Required\"),\n                    category: Yup.string()\n                      .min(2, \"Must be two characters\")\n                      .max(2, \"Must be two characters\"),\n                  })}\n                  onSubmit={async (values, { setSubmitting, resetForm }) => {\n                    console.log(\"onSubmit\", values);\n                    const results = await axios({\n                      method: \"post\",\n                      url: \"http://localhost:5000/questions\",\n                      data: {\n                        questionNumber: values.questionNumber,\n                        text: values.text,\n                        category: values.category,\n                      },\n                    });\n                    //GetQuestions()\n                    alert(\n                      `Question number ${results.data.questionNumber} was successfully added to the database`\n                    );\n                    setSubmitting(false);\n                    resetForm();\n                  }}\n                >\n                  {(props) => (\n                    <Form>\n                      <h4>Add New Question</h4>\n                      <CustomTextInput\n                        label=\"Question Number\"\n                        name=\"questionNumber\"\n                        type=\"number\"\n                        placeholder=\"Question number\"\n                      />\n                      <br />\n                      <CustomTextInput\n                        label=\"Question Text\"\n                        name=\"text\"\n                        type=\"text\"\n                        placeholder=\"Enter question here...\"\n                      />\n                      <br />\n                      <CustomTextInput\n                        label=\"Category\"\n                        name=\"category\"\n                        type=\"text\"\n                        placeholder=\"Category\"\n                      />\n                      <br />\n                      <button type=\"submit\">\n                        {props.isSubmitting ? \"Loading...\" : \"Submit\"}\n                      </button>\n                    </Form>\n                  )}\n                </Formik>\n              </GridItem>\n            </GridContainer>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}