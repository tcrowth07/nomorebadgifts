{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/src/views/Admin/admin.js\";\nimport React, { useState } from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport styles from \"assets/jss/material-kit-react/views/adminPage/adminStyle.js\";\nimport useAxios from \"axios-hooks\";\nimport { Form, Formik, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport Axios from \"axios\"; //import classes from \"*.module.css\";\n\nvar useStyles = makeStyles(styles);\nexport default function QuizPage(_x) {\n  return _QuizPage.apply(this, arguments);\n}\n\nfunction _QuizPage() {\n  _QuizPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(props) {\n    var _this = this;\n\n    var classes, rest, _useState, _useState2, questions, setQuestions, urlGetQuestions, _useAxios, _useAxios2, _useAxios2$, data, loading, error, response, CustomTextInput;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            classes = useStyles();\n            rest = Object.assign({}, props);\n            _useState = useState([]), _useState2 = _slicedToArray(_useState, 2), questions = _useState2[0], setQuestions = _useState2[1]; ////Import Questions/////\n\n            urlGetQuestions = \"http://localhost:5000/questions\";\n            _useAxios = useAxios(urlGetQuestions), _useAxios2 = _slicedToArray(_useAxios, 1), _useAxios2$ = _useAxios2[0], data = _useAxios2$.data, loading = _useAxios2$.loading, error = _useAxios2$.error, response = _useAxios2$.response;\n\n            if (!loading) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", /*#__PURE__*/React.createElement(\"h5\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 23\n              }\n            }, \"Loading...\"));\n\n          case 7:\n            if (!error) {\n              _context2.next = 9;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", /*#__PURE__*/React.createElement(\"h5\", {\n              style: {\n                color: \"red\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 7\n              }\n            }, \"There was an error loading the admin\"));\n\n          case 9:\n            if (response.data) {\n              setQuestions(response.data);\n            } ///Custom Components///\n\n\n            CustomTextInput = function CustomTextInput(_ref) {\n              var label = _ref.label,\n                  props = _objectWithoutProperties(_ref, [\"label\"]);\n\n              var _useField = useField(props),\n                  _useField2 = _slicedToArray(_useField, 2),\n                  field = _useField2[0],\n                  meta = _useField2[1];\n\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 7\n                }\n              }, /*#__PURE__*/React.createElement(\"label\", {\n                className: classes.inputLabel,\n                htmlFor: props.id || props.name,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 9\n                }\n              }, label), /*#__PURE__*/React.createElement(\"br\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 95\n                }\n              }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n                className: classes.textInput\n              }, field, props, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 9\n                }\n              })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n                className: classes.error,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 11\n                }\n              }, meta.error) : null);\n            };\n\n            return _context2.abrupt(\"return\", /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 5\n              }\n            }, /*#__PURE__*/React.createElement(Header, Object.assign({\n              color: \"transparent\",\n              brand: \"NoMoreBad.Gifts\",\n              rightLinks: /*#__PURE__*/React.createElement(HeaderLinks, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }\n              }),\n              fixed: true,\n              changeColorOnScroll: {\n                height: 200,\n                color: \"dark\"\n              }\n            }, rest, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 7\n              }\n            })), /*#__PURE__*/React.createElement(Parallax, {\n              small: true,\n              filter: true,\n              image: require(\"assets/img/gift.jpg\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 7\n              }\n            }), /*#__PURE__*/React.createElement(\"div\", {\n              className: classNames(classes.main, classes.mainRaised),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 7\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 9\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: classes.container,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 11\n              }\n            }, /*#__PURE__*/React.createElement(GridContainer, {\n              justify: \"center\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 13\n              }\n            }, /*#__PURE__*/React.createElement(GridItem, {\n              xs: 12,\n              sm: 12,\n              md: 8,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: classes.profile,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"h1\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }\n            }, \"Admin Page\"))))), /*#__PURE__*/React.createElement(GridContainer, {\n              justify: \"center\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 13\n              }\n            }, /*#__PURE__*/React.createElement(GridItem, {\n              xs: 12,\n              sm: 12,\n              md: 6,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(\"h3\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }\n            }, \"Quiz Questions\"), /*#__PURE__*/React.createElement(\"table\", {\n              className: classes.table,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"thead\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"tr\", {\n              className: classes.firstRow,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"th\", {\n              className: classes.header,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 23\n              }\n            }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n              className: classes.header,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }\n            }, \"Text\"), /*#__PURE__*/React.createElement(\"th\", {\n              className: classes.header,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 23\n              }\n            }, \"Cat\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }\n            }, Object.values(questions).map(function (question, id) {\n              return /*#__PURE__*/React.createElement(\"tr\", {\n                key: id,\n                className: classes.tableRow,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"td\", {\n                className: classes.td,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 25\n                }\n              }, question.questionNumber), /*#__PURE__*/React.createElement(\"td\", {\n                className: classes.td,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 25\n                }\n              }, question.text), /*#__PURE__*/React.createElement(\"td\", {\n                className: classes.td,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }\n              }, question.category));\n            })))), /*#__PURE__*/React.createElement(GridItem, {\n              xs: 12,\n              sm: 12,\n              md: 6,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(Formik, {\n              enableReinitialize: true,\n              initialValues: {\n                questionNumber: 0,\n                text: \"\",\n                category: \"\"\n              },\n              validationSchema: Yup.object({\n                questionNumber: Yup.number().min(1, \"Choose a valid question number\").required(\"Required\"),\n                text: Yup.string().required(\"Required\"),\n                category: Yup.string().min(2, \"Must be two characters\").max(2, \"Must be two characters\")\n              }),\n              onSubmit: /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n                  var setSubmitting, resetForm, results;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          setSubmitting = _ref2.setSubmitting, resetForm = _ref2.resetForm;\n                          console.log(\"onSubmit\", values);\n                          _context.next = 4;\n                          return Axios({\n                            method: 'post',\n                            url: 'http://localhost:5000/questions',\n                            data: {\n                              questionNumber: values.questionNumber,\n                              text: values.text,\n                              category: values.category\n                            }\n                          });\n\n                        case 4:\n                          results = _context.sent;\n                          alert(\"Question number \".concat(results.data.questionNumber, \" was successfully added to the database\"));\n                          setSubmitting(false);\n                          resetForm();\n\n                        case 8:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2, _x3) {\n                  return _ref3.apply(this, arguments);\n                };\n              }(),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }\n            }, function (props) {\n              return /*#__PURE__*/React.createElement(Form, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"h4\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }\n              }, \"Add New Question\"), /*#__PURE__*/React.createElement(CustomTextInput, {\n                label: \"Question Number\",\n                name: \"questionNumber\",\n                type: \"number\",\n                placeholder: \"Question number\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }\n              }), /*#__PURE__*/React.createElement(\"br\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 25\n                }\n              }), /*#__PURE__*/React.createElement(CustomTextInput, {\n                label: \"Question Text\",\n                name: \"text\",\n                type: \"text\",\n                placeholder: \"Enter question here...\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }\n              }), /*#__PURE__*/React.createElement(\"br\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 25\n                }\n              }), /*#__PURE__*/React.createElement(CustomTextInput, {\n                label: \"Category\",\n                name: \"category\",\n                type: \"text\",\n                placeholder: \"Category\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }\n              }), /*#__PURE__*/React.createElement(\"br\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 25\n                }\n              }), /*#__PURE__*/React.createElement(\"button\", {\n                type: \"submit\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }\n              }, props.isSubmitting ? \"Loading...\" : \"Submit\"));\n            })))))), /*#__PURE__*/React.createElement(Footer, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 7\n              }\n            })));\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _QuizPage.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/src/views/Admin/admin.js"],"names":["React","useState","classNames","makeStyles","Header","Footer","GridContainer","GridItem","HeaderLinks","Parallax","styles","useAxios","Form","Formik","useField","Yup","Axios","useStyles","QuizPage","props","classes","rest","questions","setQuestions","urlGetQuestions","data","loading","error","response","color","CustomTextInput","label","field","meta","inputLabel","id","name","textInput","touched","height","require","main","mainRaised","container","profile","table","firstRow","header","Object","values","map","question","tableRow","td","questionNumber","text","category","object","number","min","required","string","max","setSubmitting","resetForm","console","log","method","url","results","alert","isSubmitting"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAOC,MAAP,MAAmB,6DAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,QAAvB,QAAuC,QAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,IAAMC,SAAS,GAAGd,UAAU,CAACO,MAAD,CAA5B;AAEA,wBAA8BQ,QAA9B;AAAA;AAAA;;;uEAAe,kBAAwBC,KAAxB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,OADO,GACGH,SAAS,EADZ;AAEFI,YAAAA,IAFE,qBAEOF,KAFP;AAAA,wBAIqBlB,QAAQ,CAAC,EAAD,CAJ7B,6CAINqB,SAJM,kBAIKC,YAJL,kBAMb;;AACMC,YAAAA,eAPO,GAOW,iCAPX;AAAA,wBAQ8Bb,QAAQ,CAACa,eAAD,CARtC,0EAQNC,IARM,eAQNA,IARM,EAQAC,OARA,eAQAA,OARA,EAQSC,KART,eAQSA,KART,EAQgBC,QARhB,eAQgBA,QARhB;;AAAA,iBAUTF,OAVS;AAAA;AAAA;AAAA;;AAAA,2DAUO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVP;;AAAA;AAAA,iBAWTC,KAXS;AAAA;AAAA;AAAA;;AAAA,2DAaT;AAAI,cAAA,KAAK,EAAE;AAAEE,gBAAAA,KAAK,EAAE;AAAT,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAbS;;AAAA;AAgBb,gBAAID,QAAQ,CAACH,IAAb,EAAmB;AACjBF,cAAAA,YAAY,CAACK,QAAQ,CAACH,IAAV,CAAZ;AACD,aAlBY,CAoBb;;;AACMK,YAAAA,eArBO,GAqBW,SAAlBA,eAAkB,OAAyB;AAAA,kBAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,kBAAZZ,KAAY;;AAAA,8BACzBL,QAAQ,CAACK,KAAD,CADiB;AAAA;AAAA,kBACxCa,KADwC;AAAA,kBACjCC,IADiC;;AAE/C,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACE;AAAO,gBAAA,SAAS,EAAEb,OAAO,CAACc,UAA1B;AAAsC,gBAAA,OAAO,EAAEf,KAAK,CAACgB,EAAN,IAAYhB,KAAK,CAACiB,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAwEL,KAAxE,CADF,eACwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADxF,eAEE;AAAO,gBAAA,SAAS,EAAEX,OAAO,CAACiB;AAA1B,iBAAyCL,KAAzC,EAAoDb,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAIGc,IAAI,CAACK,OAAL,IAAgBL,IAAI,CAACN,KAArB,gBACC;AAAK,gBAAA,SAAS,EAAEP,OAAO,CAACO,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAgCM,IAAI,CAACN,KAArC,CADD,GAEG,IANN,CADF;AAUD,aAjCY;;AAAA,2DAoCX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,MAAD;AACE,cAAA,KAAK,EAAC,aADR;AAEE,cAAA,KAAK,EAAC,iBAFR;AAGE,cAAA,UAAU,eAAE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHd;AAIE,cAAA,KAAK,MAJP;AAKE,cAAA,mBAAmB,EAAE;AACnBY,gBAAAA,MAAM,EAAE,GADW;AAEnBV,gBAAAA,KAAK,EAAE;AAFY;AALvB,eASMR,IATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAYE,oBAAC,QAAD;AAAU,cAAA,KAAK,MAAf;AAAgB,cAAA,MAAM,MAAtB;AAAuB,cAAA,KAAK,EAAEmB,OAAO,CAAC,qBAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAK,cAAA,SAAS,EAAEtC,UAAU,CAACkB,OAAO,CAACqB,IAAT,EAAerB,OAAO,CAACsB,UAAvB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAK,cAAA,SAAS,EAAEtB,OAAO,CAACuB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,aAAD;AAAe,cAAA,OAAO,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,QAAD;AAAU,cAAA,EAAE,EAAE,EAAd;AAAkB,cAAA,EAAE,EAAE,EAAtB;AAA0B,cAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAK,cAAA,SAAS,EAAEvB,OAAO,CAACwB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,CADF,CADF,CADF,eAUE,oBAAC,aAAD;AAAe,cAAA,OAAO,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,QAAD;AAAU,cAAA,EAAE,EAAE,EAAd;AAAkB,cAAA,EAAE,EAAE,EAAtB;AAA0B,cAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAO,cAAA,SAAS,EAAExB,OAAO,CAACyB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAI,cAAA,SAAS,EAAEzB,OAAO,CAAC0B,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAI,cAAA,SAAS,EAAE1B,OAAO,CAAC2B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAI,cAAA,SAAS,EAAE3B,OAAO,CAAC2B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAI,cAAA,SAAS,EAAE3B,OAAO,CAAC2B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGC,MAAM,CAACC,MAAP,CAAc3B,SAAd,EAAyB4B,GAAzB,CAA6B,UAACC,QAAD,EAAWhB,EAAX;AAAA,kCAC5B;AAAI,gBAAA,GAAG,EAAEA,EAAT;AAAa,gBAAA,SAAS,EAAEf,OAAO,CAACgC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACE;AAAI,gBAAA,SAAS,EAAEhC,OAAO,CAACiC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACGF,QAAQ,CAACG,cADZ,CADF,eAIE;AAAI,gBAAA,SAAS,EAAElC,OAAO,CAACiC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA4BF,QAAQ,CAACI,IAArC,CAJF,eAKE;AAAI,gBAAA,SAAS,EAAEnC,OAAO,CAACiC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA4BF,QAAQ,CAACK,QAArC,CALF,CAD4B;AAAA,aAA7B,CADH,CARF,CAFF,CADF,eAwBE,oBAAC,QAAD;AAAU,cAAA,EAAE,EAAE,EAAd;AAAkB,cAAA,EAAE,EAAE,EAAtB;AAA0B,cAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,MAAD;AACE,cAAA,kBAAkB,MADpB;AAEE,cAAA,aAAa,EAAE;AACbF,gBAAAA,cAAc,EAAE,CADH;AAEbC,gBAAAA,IAAI,EAAE,EAFO;AAGbC,gBAAAA,QAAQ,EAAE;AAHG,eAFjB;AAOE,cAAA,gBAAgB,EAAEzC,GAAG,CAAC0C,MAAJ,CAAW;AAC3BH,gBAAAA,cAAc,EAAEvC,GAAG,CAAC2C,MAAJ,GACbC,GADa,CACT,CADS,EACN,gCADM,EAEbC,QAFa,CAEJ,UAFI,CADW;AAI3BL,gBAAAA,IAAI,EAAExC,GAAG,CAAC8C,MAAJ,GAAaD,QAAb,CAAsB,UAAtB,CAJqB;AAK3BJ,gBAAAA,QAAQ,EAAEzC,GAAG,CAAC8C,MAAJ,GACPF,GADO,CACH,CADG,EACA,wBADA,EAEPG,GAFO,CAEH,CAFG,EAEA,wBAFA;AALiB,eAAX,CAPpB;AAgBE,cAAA,QAAQ;AAAA,qFAAE,iBAAOb,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBc,0BAAAA,aAAjB,SAAiBA,aAAjB,EAAgCC,SAAhC,SAAgCA,SAAhC;AACRC,0BAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBjB,MAAxB;AADQ;AAAA,iCAEcjC,KAAK,CAAC;AAC1BmD,4BAAAA,MAAM,EAAE,MADkB;AAE1BC,4BAAAA,GAAG,EAAE,iCAFqB;AAG1B3C,4BAAAA,IAAI,EAAE;AACJ6B,8BAAAA,cAAc,EAAEL,MAAM,CAACK,cADnB;AAEJC,8BAAAA,IAAI,EAAEN,MAAM,CAACM,IAFT;AAGJC,8BAAAA,QAAQ,EAAEP,MAAM,CAACO;AAHb;AAHoB,2BAAD,CAFnB;;AAAA;AAEFa,0BAAAA,OAFE;AAWRC,0BAAAA,KAAK,2BAAoBD,OAAO,CAAC5C,IAAR,CAAa6B,cAAjC,6CAAL;AACAS,0BAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,0BAAAA,SAAS;;AAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAF;;AAAA;AAAA;AAAA;AAAA,iBAhBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAgCG,UAAC7C,KAAD;AAAA,kCACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAEE,oBAAC,eAAD;AACE,gBAAA,KAAK,EAAC,iBADR;AAEE,gBAAA,IAAI,EAAC,gBAFP;AAGE,gBAAA,IAAI,EAAC,QAHP;AAIE,gBAAA,WAAW,EAAC,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQE,oBAAC,eAAD;AACE,gBAAA,KAAK,EAAC,eADR;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,MAHP;AAIE,gBAAA,WAAW,EAAC,wBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcE,oBAAC,eAAD;AACE,gBAAA,KAAK,EAAC,UADR;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,IAAI,EAAC,MAHP;AAIE,gBAAA,WAAW,EAAC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAoBE;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACGA,KAAK,CAACoD,YAAN,GAAqB,YAArB,GAAoC,QADvC,CApBF,CADD;AAAA,aAhCH,CADF,CAxBF,CAVF,CADF,CADF,CAbF,eAkHE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlHF,CApCW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import React, { useState } from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/adminPage/adminStyle.js\";\nimport useAxios from \"axios-hooks\";\n\nimport { Form, Formik, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport Axios from \"axios\";\n//import classes from \"*.module.css\";\n\nconst useStyles = makeStyles(styles);\n\nexport default async function QuizPage(props) {\n  const classes = useStyles();\n  const { ...rest } = props;\n\n  const [questions, setQuestions] = useState([])\n\n  ////Import Questions/////\n  const urlGetQuestions = \"http://localhost:5000/questions\";\n  let [{ data, loading, error, response }] = useAxios(urlGetQuestions);\n\n  if (loading) return <h5>Loading...</h5>;\n  if (error)\n    return (\n      <h5 style={{ color: \"red\" }}>There was an error loading the admin</h5>\n    );\n\n  if (response.data) {\n    setQuestions(response.data);\n  }\n\n  ///Custom Components///\n  const CustomTextInput = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n    return (\n      <div>\n        <label className={classes.inputLabel} htmlFor={props.id || props.name}>{label}</label><br />\n        <input className={classes.textInput} {...field} {...props} />\n\n        {meta.touched && meta.error ? (\n          <div className={classes.error}>{meta.error}</div>\n        ) : null}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Header\n        color=\"transparent\"\n        brand=\"NoMoreBad.Gifts\"\n        rightLinks={<HeaderLinks />}\n        fixed\n        changeColorOnScroll={{\n          height: 200,\n          color: \"dark\",\n        }}\n        {...rest}\n      />\n      <Parallax small filter image={require(\"assets/img/gift.jpg\")} />\n      <div className={classNames(classes.main, classes.mainRaised)}>\n        <div>\n          <div className={classes.container}>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={12} md={8}>\n                <div className={classes.profile}>\n                  <div>\n                    <h1>Admin Page</h1>\n                  </div>\n                </div>\n              </GridItem>\n            </GridContainer>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={12} md={6}>\n                <h3>Quiz Questions</h3>\n                <table className={classes.table}>\n                  <thead>\n                    <tr className={classes.firstRow}>\n                      <th className={classes.header}>#</th>\n                      <th className={classes.header}>Text</th>\n                      <th className={classes.header}>Cat</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {Object.values(questions).map((question, id) => (\n                      <tr key={id} className={classes.tableRow}>\n                        <td className={classes.td}>\n                          {question.questionNumber}\n                        </td>\n                        <td className={classes.td}>{question.text}</td>\n                        <td className={classes.td}>{question.category}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </GridItem>\n              <GridItem xs={12} sm={12} md={6}>\n                <Formik\n                  enableReinitialize\n                  initialValues={{\n                    questionNumber: 0,\n                    text: \"\",\n                    category: \"\",\n                  }}\n                  validationSchema={Yup.object({\n                    questionNumber: Yup.number()\n                      .min(1, \"Choose a valid question number\")\n                      .required(\"Required\"),\n                    text: Yup.string().required(\"Required\"),\n                    category: Yup.string()\n                      .min(2, \"Must be two characters\")\n                      .max(2, \"Must be two characters\"),\n                  })}\n                  onSubmit={async (values, { setSubmitting, resetForm }) => {\n                    console.log(\"onSubmit\", values)\n                    const results = await Axios({\n                      method: 'post',\n                      url: 'http://localhost:5000/questions',\n                      data: {\n                        questionNumber: values.questionNumber,\n                        text: values.text,\n                        category: values.category\n                      }\n                    });\n                    alert(`Question number ${results.data.questionNumber} was successfully added to the database`)\n                    setSubmitting(false)\n                    resetForm()\n                  }}\n                >\n                  {(props) => (\n                    <Form>\n                      <h4>Add New Question</h4>\n                      <CustomTextInput\n                        label=\"Question Number\"\n                        name=\"questionNumber\"\n                        type=\"number\"\n                        placeholder=\"Question number\"\n                      /><br/>\n                      <CustomTextInput\n                        label=\"Question Text\"\n                        name=\"text\"\n                        type=\"text\"\n                        placeholder=\"Enter question here...\"\n                      /><br/>\n                      <CustomTextInput\n                        label=\"Category\"\n                        name=\"category\"\n                        type=\"text\"\n                        placeholder=\"Category\"\n                      /><br/>\n                      <button type=\"submit\">\n                        {props.isSubmitting ? \"Loading...\" : \"Submit\"}\n                      </button>\n                    </Form>\n                  )}\n                </Formik>\n              </GridItem>\n            </GridContainer>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}