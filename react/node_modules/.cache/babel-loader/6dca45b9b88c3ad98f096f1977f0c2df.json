{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/src/views/QuizPage/Sections/QuestionBox.js\";\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"assets/jss/material-kit-react/views/quizPageSections/quizStyle.js\";\nimport axios from \"axios\";\nvar useStyles = makeStyles(styles);\nexport default function QuestionBox() {\n  return _QuestionBox.apply(this, arguments);\n}\n\nfunction _QuestionBox() {\n  _QuestionBox = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _this = this;\n\n    var classes, url, questions, _React$useState, _React$useState2, arrayOfAnswers, setArrayOfAnswers, _React$useState3, _React$useState4, random, setRandom, _React$useState5, _React$useState6, random2, setRandom2, enable;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            enable = function _enable(questionNumber, answer) {\n              arrayOfAnswers[questionNumber] = answer;\n              setArrayOfAnswers(arrayOfAnswers); //I have no idea why I need this, but it doesn't work without it\n\n              setRandom(answer);\n              setRandom2(questionNumber);\n              console.log(\"arrayOfAnswers\", arrayOfAnswers);\n              console.log(\"random\", random);\n              console.log(\"random2\", random2);\n            };\n\n            classes = useStyles();\n            url = \"localhost:5000/questions\";\n            questions = [];\n            _context.next = 6;\n            return axios.get(url);\n\n          case 6:\n            questions = _context.sent;\n            console.log(questions);\n            _React$useState = React.useState([]), _React$useState2 = _slicedToArray(_React$useState, 2), arrayOfAnswers = _React$useState2[0], setArrayOfAnswers = _React$useState2[1];\n            _React$useState3 = React.useState(0), _React$useState4 = _slicedToArray(_React$useState3, 2), random = _React$useState4[0], setRandom = _React$useState4[1];\n            _React$useState5 = React.useState(0), _React$useState6 = _slicedToArray(_React$useState5, 2), random2 = _React$useState6[0], setRandom2 = _React$useState6[1];\n            return _context.abrupt(\"return\", /*#__PURE__*/React.createElement(\"div\", {\n              className: classes.section,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 5\n              }\n            }, Object.values(questions).map(function (question, id) {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                id: id,\n                className: classes.questionBox,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 9\n                }\n              }, /*#__PURE__*/React.createElement(\"hr\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 11\n                }\n              }), /*#__PURE__*/React.createElement(\"h2\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 11\n                }\n              }, question.text), /*#__PURE__*/React.createElement(\"br\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 11\n                }\n              }), /*#__PURE__*/React.createElement(GridContainer, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 11\n                }\n              }, /*#__PURE__*/React.createElement(GridItem, {\n                xs: 1,\n                sm: 1,\n                md: 1,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 13\n                }\n              }), /*#__PURE__*/React.createElement(GridItem, {\n                xs: 12,\n                sm: 2,\n                md: 2,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 13\n                }\n              }, /*#__PURE__*/React.createElement(Button, {\n                id: id + \"-1\",\n                onClick: function onClick() {\n                  enable(id, 1);\n                },\n                color: arrayOfAnswers[id] === 1 ? \"success\" : \"github\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 15\n                }\n              }, \"Not at all\")), /*#__PURE__*/React.createElement(GridItem, {\n                xs: 12,\n                sm: 2,\n                md: 2,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 13\n                }\n              }, /*#__PURE__*/React.createElement(Button, {\n                id: id + \"-2\",\n                onClick: function onClick() {\n                  enable(id, 2);\n                },\n                color: arrayOfAnswers[id] === 2 ? \"success\" : \"github\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 15\n                }\n              }, \"A Little\")), /*#__PURE__*/React.createElement(GridItem, {\n                xs: 12,\n                sm: 2,\n                md: 2,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 13\n                }\n              }, /*#__PURE__*/React.createElement(Button, {\n                id: id + \"-3\",\n                onClick: function onClick() {\n                  enable(id, 3);\n                },\n                color: arrayOfAnswers[id] === 3 ? \"success\" : \"github\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 15\n                }\n              }, \"Neutral\")), /*#__PURE__*/React.createElement(GridItem, {\n                xs: 12,\n                sm: 2,\n                md: 2,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 13\n                }\n              }, /*#__PURE__*/React.createElement(Button, {\n                id: id + \"-4\",\n                onClick: function onClick() {\n                  enable(id, 4);\n                },\n                color: arrayOfAnswers[id] === 4 ? \"success\" : \"github\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 15\n                }\n              }, \"Somewhat\")), /*#__PURE__*/React.createElement(GridItem, {\n                xs: 12,\n                sm: 2,\n                md: 2,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 13\n                }\n              }, /*#__PURE__*/React.createElement(Button, {\n                id: id + \"-5\",\n                onClick: function onClick() {\n                  enable(id, 5);\n                },\n                color: arrayOfAnswers[id] === 5 ? \"success\" : \"github\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 15\n                }\n              }, \"Very Much\")), /*#__PURE__*/React.createElement(GridItem, {\n                xs: 1,\n                sm: 1,\n                md: 1,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 13\n                }\n              })), /*#__PURE__*/React.createElement(\"hr\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 11\n                }\n              }));\n            }), /*#__PURE__*/React.createElement(Link, {\n              to: \"/results-page\",\n              className: classes.button,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 7\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              className: classes.finish,\n              color: \"warning\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 9\n              }\n            }, \"Finish\"))));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _QuestionBox.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/src/views/QuizPage/Sections/QuestionBox.js"],"names":["React","makeStyles","GridContainer","GridItem","Button","Link","styles","axios","useStyles","QuestionBox","enable","questionNumber","answer","arrayOfAnswers","setArrayOfAnswers","setRandom","setRandom2","console","log","random","random2","classes","url","questions","get","useState","section","Object","values","map","question","id","questionBox","text","button","finish"],"mappings":"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","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport { Link } from \"react-router-dom\"\n\nimport styles from \"assets/jss/material-kit-react/views/quizPageSections/quizStyle.js\";\n\nimport axios from \"axios\"\n\nconst useStyles = makeStyles(styles);\n\nexport default async function QuestionBox() {\n  const classes = useStyles();\n\n  const url = \"localhost:5000/questions\"\n  let questions = []\n  questions = await axios.get(url)\n\n  console.log(questions)\n\n  const [arrayOfAnswers, setArrayOfAnswers] = React.useState([]);\n  const [random, setRandom] = React.useState(0);\n  const [random2, setRandom2] = React.useState(0);\n\n  function enable(questionNumber, answer) {\n    \n    arrayOfAnswers[questionNumber] = answer\n    setArrayOfAnswers(arrayOfAnswers)\n\n    //I have no idea why I need this, but it doesn't work without it\n    setRandom(answer)\n    setRandom2(questionNumber)\n    console.log(\"arrayOfAnswers\", arrayOfAnswers)\n    console.log(\"random\", random)\n    console.log(\"random2\", random2)\n  }\n\n  return (\n    <div className={classes.section}>\n      {Object.values(questions).map((question, id) => (\n        <div id={id} className={classes.questionBox}>\n          <hr />\n          <h2>{question.text}</h2>\n          <br />\n          <GridContainer>\n            <GridItem xs={1} sm={1} md={1}></GridItem>\n            <GridItem xs={12} sm={2} md={2}>\n              <Button\n                id={id + \"-1\"}\n                onClick={() => {\n                  enable(id, 1);\n                }}\n                color={arrayOfAnswers[id] === 1 ? \"success\" : \"github\"}\n              >\n                Not at all\n              </Button>\n            </GridItem>\n            <GridItem xs={12} sm={2} md={2}>\n              <Button\n                id={id + \"-2\"}\n                onClick={() => {\n                  enable(id, 2);\n                }}\n                color={arrayOfAnswers[id] === 2 ? \"success\" : \"github\"}\n              >\n                A Little\n              </Button>\n            </GridItem>\n            <GridItem xs={12} sm={2} md={2}>\n              <Button\n                id={id + \"-3\"}\n                onClick={() => {\n                  enable(id, 3);\n                }}\n                color={arrayOfAnswers[id] === 3 ? \"success\" : \"github\"}\n              >\n                Neutral\n              </Button>\n            </GridItem>\n            <GridItem xs={12} sm={2} md={2}>\n              <Button\n                id={id + \"-4\"}\n                onClick={() => {\n                  enable(id, 4);\n                }}\n                color={arrayOfAnswers[id] === 4 ? \"success\" : \"github\"}\n              >\n                Somewhat\n              </Button>\n            </GridItem>\n            <GridItem xs={12} sm={2} md={2}>\n              <Button\n                id={id + \"-5\"}\n                onClick={() => {\n                  enable(id, 5);\n                }}\n                color={arrayOfAnswers[id] === 5 ? \"success\" : \"github\"}\n              >\n                Very Much\n              </Button>\n            </GridItem>\n            <GridItem xs={1} sm={1} md={1}></GridItem>\n          </GridContainer>\n          <hr />\n        </div>\n      ))}\n      <Link to={\"/results-page\"} className={classes.button}>\n        <Button className={classes.finish} color=\"warning\">\n          Finish\n        </Button>\n      </Link>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}