{"ast":null,"code":"import _objectWithoutProperties from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/src/views/Admin/admin.js\",\n    _this2 = this;\n\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\nimport styles from \"assets/jss/material-kit-react/views/adminPage/adminStyle.js\";\nimport useAxios from \"axios-hooks\";\nimport { Form, Formik, useField } from \"formik\";\nimport * as Yup from \"yup\"; //import classes from \"*.module.css\";\n\nvar useStyles = makeStyles(styles);\nexport default function QuizPage(props) {\n  var _this = this;\n\n  var classes = useStyles();\n  var rest = Object.assign({}, props); ////Import Questions/////\n\n  var url = \"http://localhost:5000/questions\";\n\n  var _useAxios = useAxios(url),\n      _useAxios2 = _slicedToArray(_useAxios, 1),\n      _useAxios2$ = _useAxios2[0],\n      questions = _useAxios2$.questions,\n      loading = _useAxios2$.loading,\n      error = _useAxios2$.error,\n      response = _useAxios2$.response;\n\n  if (loading) return /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"There was an error loading the quiz\");\n\n  if (response.data) {\n    questions = response.data;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, Object.assign({\n    color: \"transparent\",\n    brand: \"NoMoreBad.Gifts\",\n    rightLinks: /*#__PURE__*/React.createElement(HeaderLinks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }),\n    fixed: true,\n    changeColorOnScroll: {\n      height: 200,\n      color: \"dark\"\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Parallax, {\n    small: true,\n    filter: true,\n    image: require(\"assets/img/gift.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.main, classes.mainRaised),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Admin Page\"))))), /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Quiz Questions\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: classes.firstRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Text\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Cat\")), Object.values(questions).map(function (question, id) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      className: classes.tableRow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: classes.td,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, question.questionNumber), /*#__PURE__*/React.createElement(\"td\", {\n      className: classes.td,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, question.text), /*#__PURE__*/React.createElement(\"td\", {\n      className: classes.td,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, question.category));\n  })), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      questionNumber: 0,\n      text: \"\",\n      category: \"\"\n    },\n    validationSchema: Yup.object({\n      questionNumber: Yup.number().min(1, \"Choose a valid question number\").required(\"Required\"),\n      text: Yup.string().required(\"Required\"),\n      category: Yup.string().min(2, \"Must be two characters\").max(2, \"Must be two characters\")\n    }),\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting,\n          resetForm = _ref.resetForm;\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        resetForm();\n        setSubmitting(false);\n      }, 3000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, \"Add New Question\"), /*#__PURE__*/React.createElement(CustomTextInput, {\n      questionNumber: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }));\n  }))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }));\n} ///Custom Components///\n\nvar CustomTextInput = function CustomTextInput(_ref2) {\n  var label = _ref2.label,\n      props = _objectWithoutProperties(_ref2, [\"label\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id || props.name,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: classes.textInput\n  }, field, props, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.error,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, meta.error) : null);\n};","map":{"version":3,"sources":["/Users/tcrowth07/Desktop/NoMoreBad.Gifts/react/src/views/Admin/admin.js"],"names":["React","classNames","makeStyles","Header","Footer","GridContainer","GridItem","HeaderLinks","Parallax","styles","useAxios","Form","Formik","useField","Yup","useStyles","QuizPage","props","classes","rest","url","questions","loading","error","response","color","data","height","require","main","mainRaised","container","profile","table","firstRow","header","Object","values","map","question","id","tableRow","td","questionNumber","text","category","object","number","min","required","string","max","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","CustomTextInput","label","field","meta","name","textInput","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nimport Header from \"components/Header/Header.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Parallax from \"components/Parallax/Parallax.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/adminPage/adminStyle.js\";\nimport useAxios from \"axios-hooks\"\n\nimport { Form, Formik, useField } from \"formik\"\nimport * as Yup from \"yup\"\n//import classes from \"*.module.css\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function QuizPage(props) {\n  const classes = useStyles();\n  const { ...rest } = props;\n\n  ////Import Questions/////\n  const url = \"http://localhost:5000/questions\"\n  let [{questions, loading, error, response}] = useAxios(url)\n\n  if (loading) return <h5>Loading...</h5>;\n  if (error) return <h5 style={{color:\"red\"}}>There was an error loading the quiz</h5>;\n\n  if (response.data) {\n    questions = response.data\n  }\n\n  return (\n    <div>\n      <Header\n        color=\"transparent\"\n        brand=\"NoMoreBad.Gifts\"\n        rightLinks={<HeaderLinks />}\n        fixed\n        changeColorOnScroll={{\n          height: 200,\n          color: \"dark\"\n        }}\n        {...rest}\n      />\n      <Parallax small filter image={require(\"assets/img/gift.jpg\")} />\n      <div className={classNames(classes.main, classes.mainRaised)}>\n        <div>\n          <div className={classes.container}>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={12} md={8}>\n                <div className={classes.profile}>\n                  <div>\n                    <h1>Admin Page</h1>\n                  </div>\n                </div>\n              </GridItem>\n            </GridContainer>\n            <GridContainer justify=\"center\">\n                <h3>Quiz Questions</h3>\n                <table className={classes.table}>\n                    <tr className={classes.firstRow}>\n                        <th className={classes.header}>#</th>\n                        <th className={classes.header}>Text</th>\n                        <th className={classes.header}>Cat</th>\n                    </tr>\n                {Object.values(questions).map((question, id) => (\n                    <tr key={id} className={classes.tableRow}>\n                    <td className={classes.td}>{question.questionNumber}</td>\n                    <td className={classes.td}>{question.text}</td>\n                    <td className={classes.td}>{question.category}</td>\n                    </tr>\n                ))}\n                </table>\n                <Formik \n                    initialValues={{\n                        questionNumber: 0,\n                        text: \"\",\n                        category: \"\"\n                    }}\n                    validationSchema={Yup.object({\n                        questionNumber: Yup.number()\n                            .min(1, \"Choose a valid question number\")\n                            .required(\"Required\"),\n                        text: Yup.string()\n                            .required(\"Required\"),\n                        category: Yup.string()\n                            .min(2, \"Must be two characters\")\n                            .max(2, \"Must be two characters\"),\n                    })}\n                    onSubmit={(values, {setSubmitting, resetForm}) => {\n                        setTimeout(() => {\n                            alert(JSON.stringify(values, null, 2));\n                            resetForm();\n                            setSubmitting(false);\n                        }, 3000)\n                    }}\n                >\n                    {props => (\n                        <Form>\n                            <h4>Add New Question</h4>\n                            <CustomTextInput questionNumber/>\n                        </Form>\n                    )}\n                </Formik>\n            </GridContainer>\n      \n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\n///Custom Components///\nconst CustomTextInput = ({label, ...props}) => {\n    const [field, meta] = useField(props)\n\n    return(\n        <>\n            <label htmlFor={props.id || props.name}>{label}</label>\n            <input className={classes.textInput} {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <div className={classes.error}>{meta.error}</div>\n            ): null}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}